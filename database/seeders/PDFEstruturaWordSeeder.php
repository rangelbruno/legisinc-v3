<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\Log;

class PDFEstruturaWordSeeder extends Seeder
{
    /**
     * PRESERVAR CORRE√á√ÉO: Extra√ß√£o completa da estrutura Word (CABE√áALHO + CORPO + RODAP√â)
     * 
     * PROBLEMA RESOLVIDO: 
     * - Sistema anterior s√≥ lia document.xml (corpo)
     * - IGNORAVA header*.xml (cabe√ßalho com imagem)
     * - IGNORAVA footer*.xml (rodap√© institucional)
     * 
     * SOLU√á√ÉO IMPLEMENTADA:
     * - Extrair header*.xml, document.xml, footer*.xml separadamente
     * - Combinar na ordem correta: CABE√áALHO + CORPO + RODAP√â
     * - Respeitar formata√ß√£o e estrutura configurada pelo Legislativo
     */
    public function run()
    {
        Log::info("üìã PDFEstruturaWordSeeder: Iniciando verifica√ß√£o da estrutura Word...");
        
        $controllerPath = app_path('Http/Controllers/ProposicaoAssinaturaController.php');
        
        if (!file_exists($controllerPath)) {
            Log::error("‚ùå Controller n√£o encontrado: {$controllerPath}");
            return;
        }
        
        $controllerContent = file_get_contents($controllerPath);
        
        // Verificar se a solu√ß√£o est√° implementada
        $correcoes = [
            'M√©todo extrairConteudoDOCX com estrutura completa' => 'EXTRAIR CABE√áALHO (header*.xml)',
            'Extra√ß√£o separada das se√ß√µes' => 'extrairSecaoWord',
            'Combina√ß√£o ordenada das se√ß√µes' => 'combinarSecoesWord',
            'Processamento de header e footer' => 'header*.xml ou footer*.xml',
            'Formata√ß√£o espec√≠fica do corpo' => 'formatarCorpoDocumento',
            'Log detalhado da extra√ß√£o' => 'Documento Word extra√≠do com estrutura completa'
        ];
        
        $correcoesValidadas = 0;
        foreach ($correcoes as $nome => $busca) {
            if (strpos($controllerContent, $busca) !== false) {
                Log::info("   ‚úÖ {$nome}");
                $correcoesValidadas++;
            } else {
                Log::error("   ‚ùå {$nome} - N√ÉO ENCONTRADO");
            }
        }
        
        if ($correcoesValidadas === count($correcoes)) {
            Log::info("üéØ PDFEstruturaWordSeeder: TODAS as corre√ß√µes validadas! ({$correcoesValidadas}/" . count($correcoes) . ")");
            
            // Teste adicional: Verificar se m√©todos auxiliares existem
            $metodosAuxiliares = [
                'extrairSecaoWord',
                'extrairTextoDeXml', 
                'combinarSecoesWord',
                'formatarCorpoDocumento'
            ];
            
            $metodosEncontrados = 0;
            foreach ($metodosAuxiliares as $metodo) {
                if (strpos($controllerContent, "private function {$metodo}(") !== false) {
                    Log::info("   ‚úÖ M√©todo {$metodo} implementado");
                    $metodosEncontrados++;
                } else {
                    Log::error("   ‚ùå M√©todo {$metodo} n√£o encontrado");
                }
            }
            
            Log::info("üìä M√©todos auxiliares: {$metodosEncontrados}/" . count($metodosAuxiliares));
            
            if ($metodosEncontrados === count($metodosAuxiliares)) {
                Log::info("üöÄ PDFEstruturaWordSeeder: SOLU√á√ÉO COMPLETA implementada!");
                Log::info("‚úÖ PDF agora extrai: CABE√áALHO (imagem) + CORPO + RODAP√â (institucional)");
                Log::info("‚úÖ Estrutura do Word configurada pelo Legislativo ser√° respeitada");
                Log::info("‚úÖ Pronto para teste em: /proposicoes/2/assinar");
            }
            
        } else {
            Log::error("‚ùå PDFEstruturaWordSeeder: Corre√ß√µes incompletas ({$correcoesValidadas}/" . count($correcoes) . ")");
        }
    }
}