#!/bin/bash

echo "=== TESTE DE VALIDA√á√ÉO DE SENHA PFX ==="
echo "Este script testa se a valida√ß√£o de senha do certificado PFX est√° funcionando corretamente"
echo

# Cores para output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Verificar se o Docker est√° rodando
if ! docker ps | grep -q legisinc-app; then
    echo -e "${RED}‚ùå Container legisinc-app n√£o est√° rodando${NC}"
    echo "Execute: docker-compose up -d"
    exit 1
fi

echo -e "${YELLOW}üîß Executando migrate:fresh --seed...${NC}"
docker exec legisinc-app php artisan migrate:fresh --seed --quiet

echo -e "${GREEN}‚úÖ Base de dados preparada${NC}"
echo

echo -e "${YELLOW}üß™ Testando valida√ß√£o de senha PFX${NC}"

# Script PHP para testar a valida√ß√£o
SCRIPT_PHP='
<?php
use App\Services\AssinaturaDigitalService;

$service = app(AssinaturaDigitalService::class);

echo "=== TESTE DE PROCESSAMENTO CERTIFICADO PFX ===\n";

// Testar com senha inv√°lida (deve falhar)
try {
    $dados = [
        "tipo_certificado" => "PFX",
        "arquivo_pfx" => "/tmp/certificado_teste.pfx",
        "senha_pfx" => "senha_incorreta"
    ];
    
    // Criar arquivo PFX fict√≠cio para teste
    $pfxData = "-----BEGIN CERTIFICATE-----\nMIIC2jCCAcKgAwIBAgIJAN...\n-----END CERTIFICATE-----";
    file_put_contents("/tmp/certificado_teste.pfx", $pfxData);
    
    $resultado = $service->assinarPDF("/tmp/teste.pdf", $dados);
    echo "‚ùå ERRO: Senha incorreta foi aceita (n√£o deveria)\n";
    
} catch (Exception $e) {
    echo "‚úÖ CORRETO: Senha incorreta rejeitada - " . $e->getMessage() . "\n";
}

echo "\n=== TESTE COM VALIDA√á√ÉO DIRETA ===\n";

// Testar m√©todo de processamento PFX diretamente
$reflection = new ReflectionClass(AssinaturaDigitalService::class);
$method = $reflection->getMethod("processarCertificadoPFX");
$method->setAccessible(true);

try {
    $resultado = $method->invokeArgs($service, ["/tmp/certificado_teste.pfx", "senha_incorreta"]);
    if ($resultado === null) {
        echo "‚úÖ CORRETO: M√©todo processarCertificadoPFX rejeitou senha incorreta\n";
    } else {
        echo "‚ùå ERRO: M√©todo processarCertificadoPFX aceitou senha incorreta\n";
    }
} catch (Exception $e) {
    echo "‚úÖ CORRETO: Exce√ß√£o lan√ßada para senha incorreta - " . $e->getMessage() . "\n";
}

// Limpar arquivos de teste
unlink("/tmp/certificado_teste.pfx");

echo "\n=== RESUMO ===\n";
echo "Teste de valida√ß√£o de senha PFX conclu√≠do.\n";
echo "Se viu mensagens \"‚úÖ CORRETO\", a corre√ß√£o est√° funcionando.\n";
echo "Se viu \"‚ùå ERRO\", ainda h√° problemas na valida√ß√£o.\n";
'

echo "$SCRIPT_PHP" > /tmp/teste_pfx.php

echo -e "${YELLOW}üöÄ Executando teste de valida√ß√£o...${NC}"
docker exec legisinc-app php -f /tmp/teste_pfx.php

rm -f /tmp/teste_pfx.php

echo
echo -e "${GREEN}üéØ TESTE CONCLU√çDO${NC}"
echo -e "${YELLOW}üí° Para testar manualmente:${NC}"
echo "1. Acesse: http://localhost:8001/proposicoes/1/assinatura-digital"
echo "2. Selecione 'Arquivo PFX/P12'"
echo "3. Fa√ßa upload de um certificado .pfx"
echo "4. Digite uma senha incorreta"
echo "5. O sistema deve rejeitar e mostrar erro de senha incorreta"

echo
echo -e "${GREEN}‚úÖ Script de teste conclu√≠do${NC}"