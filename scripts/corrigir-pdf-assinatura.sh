#!/bin/bash

echo "üîß CORRE√á√ÉO: PDF de Assinatura - Eliminar Execu√ß√£o Duplicada"
echo "============================================================="

echo ""
echo "üìã PROBLEMA IDENTIFICADO:"
echo "-------------------------"
echo "‚Ä¢ M√©todo obterConteudoOnlyOffice() executa 2 vezes consecutivas"
echo "‚Ä¢ Isso pode estar causando conflito na gera√ß√£o do PDF"
echo "‚Ä¢ PDF pode estar sendo gerado com conte√∫do incorreto"

echo ""
echo "üîß IMPLEMENTANDO CORRE√á√ÉO:"
echo "-------------------------"

# Backup do arquivo original
echo "1. Fazendo backup do controller original..."
cp /home/bruno/legisinc/app/Http/Controllers/ProposicaoAssinaturaController.php \
   /home/bruno/legisinc/app/Http/Controllers/ProposicaoAssinaturaController.php.backup.$(date +%s)

echo "   ‚úÖ Backup criado"

# Criar arquivo de patch para corrigir a execu√ß√£o duplicada
cat > /tmp/pdf_assinatura_fix.patch << 'EOF'
--- ProposicaoAssinaturaController.php.orig
+++ ProposicaoAssinaturaController.php
@@ -435,10 +435,15 @@
      */
     private function criarPDFDoArquivoMaisRecente(string $caminhoPdfAbsoluto, Proposicao $proposicao): void
     {
+        static $processingLock = [];
+        
         try {
+            // Evitar execu√ß√£o duplicada/concorrente
+            $lockKey = "pdf_generation_{$proposicao->id}";
+            if (isset($processingLock[$lockKey])) {
+                error_log("PDF Assinatura: Execu√ß√£o duplicada detectada e prevenida para proposi√ß√£o {$proposicao->id}");
+                return;
+            }
+            $processingLock[$lockKey] = true;
+            
             // ESTRAT√âGIA MELHORADA: Buscar SEMPRE o arquivo mais recente
             $arquivoMaisRecente = $this->encontrarArquivoMaisRecente($proposicao);
             
@@ -447,8 +452,10 @@
                 
                 // Usar o arquivo encontrado
                 $arquivoEncontrado = $arquivoMaisRecente['path'];
+                error_log("PDF Assinatura: Usando arquivo: {$arquivoEncontrado}");
                 error_log("PDF Assinatura: Tamanho do arquivo: " . filesize($arquivoEncontrado) . " bytes");
                 
                 // Extrair conte√∫do do arquivo mais recente
                 if (str_contains($arquivoEncontrado, '.docx')) {
                     try {
@@ -457,6 +464,7 @@
                         if (!empty($conteudo) && strlen($conteudo) > 50) {
                             error_log("PDF Assinatura: Primeiros 200 chars: " . substr($conteudo, 0, 200));
                             
+                            // Gerar PDF com o conte√∫do extra√≠do
                             $this->gerarPDFComConteudo($caminhoPdfAbsoluto, $conteudo, $proposicao);
                             error_log("PDF Assinatura: PDF gerado com sucesso usando arquivo mais recente");
                             return;
@@ -479,6 +487,10 @@
         } catch (\Exception $e) {
             error_log("PDF Assinatura: Erro na cria√ß√£o do PDF: " . $e->getMessage());
             $this->gerarPDFFallback($caminhoPdfAbsoluto, $proposicao);
+        } finally {
+            // Liberar lock
+            $lockKey = "pdf_generation_{$proposicao->id}";
+            unset($processingLock[$lockKey]);
         }
     }
EOF

echo ""
echo "2. Aplicando corre√ß√£o para eliminar execu√ß√£o duplicada..."

# Verificar se o patch pode ser aplicado
echo "   Verificando estrutura do arquivo..."

if grep -q "criarPDFDoArquivoMaisRecente" /home/bruno/legisinc/app/Http/Controllers/ProposicaoAssinaturaController.php; then
    echo "   ‚úÖ M√©todo encontrado"
    
    # Aplicar corre√ß√£o manual (j√° que patch pode n√£o estar dispon√≠vel)
    echo "   Aplicando corre√ß√£o manual..."
    
    # Criar arquivo tempor√°rio com a corre√ß√£o
    cat > /tmp/fix_controller.php << 'EOF'
<?php

// Corrigir m√©todo criarPDFDoArquivoMaisRecente para evitar execu√ß√£o duplicada
$file = '/home/bruno/legisinc/app/Http/Controllers/ProposicaoAssinaturaController.php';
$content = file_get_contents($file);

// Adicionar controle de lock para evitar execu√ß√£o duplicada
$search = 'private function criarPDFDoArquivoMaisRecente(string $caminhoPdfAbsoluto, Proposicao $proposicao): void
    {
        try {';

$replace = 'private function criarPDFDoArquivoMaisRecente(string $caminhoPdfAbsoluto, Proposicao $proposicao): void
    {
        static $processingLock = [];
        
        try {
            // Evitar execu√ß√£o duplicada/concorrente
            $lockKey = "pdf_generation_{$proposicao->id}";
            if (isset($processingLock[$lockKey])) {
                error_log("PDF Assinatura: Execu√ß√£o duplicada detectada e prevenida para proposi√ß√£o {$proposicao->id}");
                return;
            }
            $processingLock[$lockKey] = true;';

if (strpos($content, $search) !== false) {
    $content = str_replace($search, $replace, $content);
    echo "‚úÖ Corre√ß√£o 1/3: Lock de execu√ß√£o duplicada aplicado\n";
} else {
    echo "‚ö†Ô∏è  Corre√ß√£o 1/3: Padr√£o n√£o encontrado (pode j√° estar aplicado)\n";
}

// Adicionar log melhorado
$search2 = '// Usar o arquivo encontrado
                $arquivoEncontrado = $arquivoMaisRecente[\'path\'];
                error_log("PDF Assinatura: Tamanho do arquivo: " . filesize($arquivoEncontrado) . " bytes");';

$replace2 = '// Usar o arquivo encontrado
                $arquivoEncontrado = $arquivoMaisRecente[\'path\'];
                error_log("PDF Assinatura: Usando arquivo: {$arquivoEncontrado}");
                error_log("PDF Assinatura: Tamanho do arquivo: " . filesize($arquivoEncontrado) . " bytes");';

if (strpos($content, $search2) !== false) {
    $content = str_replace($search2, $replace2, $content);
    echo "‚úÖ Corre√ß√£o 2/3: Log melhorado aplicado\n";
} else {
    echo "‚ö†Ô∏è  Corre√ß√£o 2/3: Padr√£o n√£o encontrado (pode j√° estar aplicado)\n";
}

// Adicionar finally para liberar lock
$search3 = '} catch (\Exception $e) {
            error_log("PDF Assinatura: Erro na cria√ß√£o do PDF: " . $e->getMessage());
            $this->gerarPDFFallback($caminhoPdfAbsoluto, $proposicao);
        }
    }';

$replace3 = '} catch (\Exception $e) {
            error_log("PDF Assinatura: Erro na cria√ß√£o do PDF: " . $e->getMessage());
            $this->gerarPDFFallback($caminhoPdfAbsoluto, $proposicao);
        } finally {
            // Liberar lock
            $lockKey = "pdf_generation_{$proposicao->id}";
            if (isset($processingLock[$lockKey])) {
                unset($processingLock[$lockKey]);
            }
        }
    }';

if (strpos($content, $search3) !== false) {
    $content = str_replace($search3, $replace3, $content);
    echo "‚úÖ Corre√ß√£o 3/3: Finally block para liberar lock aplicado\n";
} else {
    echo "‚ö†Ô∏è  Corre√ß√£o 3/3: Padr√£o n√£o encontrado (pode j√° estar aplicado)\n";
}

// Salvar arquivo corrigido
file_put_contents($file, $content);
echo "‚úÖ Arquivo salvo com corre√ß√µes\n";
EOF

    # Executar corre√ß√£o
    php /tmp/fix_controller.php
    
    echo "   ‚úÖ Corre√ß√£o aplicada"
else
    echo "   ‚ùå M√©todo n√£o encontrado no arquivo"
fi

echo ""
echo "3. Verificando se corre√ß√£o foi aplicada..."

if grep -q "processingLock\|Execu√ß√£o duplicada detectada" /home/bruno/legisinc/app/Http/Controllers/ProposicaoAssinaturaController.php; then
    echo "   ‚úÖ Corre√ß√£o foi aplicada com sucesso"
else
    echo "   ‚ùå Corre√ß√£o N√ÉO foi aplicada"
fi

echo ""
echo "4. Limpando arquivos tempor√°rios..."
rm -f /tmp/pdf_assinatura_fix.patch
rm -f /tmp/fix_controller.php
echo "   ‚úÖ Limpeza conclu√≠da"

echo ""
echo "üéØ CORRE√á√ÉO CONCLU√çDA!"
echo "====================="
echo ""
echo "‚úÖ Adicionado controle de lock para evitar execu√ß√£o duplicada"
echo "‚úÖ Melhorados logs para debug"
echo "‚úÖ Adicionado finally block para garantir limpeza"
echo ""
echo "üìã TESTE AGORA:"
echo "--------------"
echo "1. Execute: docker-compose up -d (se n√£o estiver rodando)"
echo "2. Acesse: http://localhost:8001/login"
echo "3. Login: jessica@sistema.gov.br / 123456"
echo "4. V√° para: http://localhost:8001/proposicoes/8/assinar"
echo "5. Verifique se o PDF agora mostra o conte√∫do correto"
echo ""
echo "üí° LOGS PARA ACOMPANHAR:"
echo "-----------------------"
echo "tail -f /home/bruno/legisinc/storage/logs/laravel.log | grep 'PDF Assinatura'"