#!/bin/bash

echo "======================================"
echo "TESTE: PDF com Corre√ß√µes Aplicadas"
echo "======================================"
echo ""

# 1. Verificar se a proposi√ß√£o 5 existe e tem conte√∫do
echo "1. Verificando proposi√ß√£o 5..."
PROPOSICAO_DATA=$(docker exec legisinc-app php artisan tinker --execute="
\$p = \App\Models\Proposicao::find(5);
if (\$p) {
    echo 'ID: ' . \$p->id . PHP_EOL;
    echo 'Tipo: ' . \$p->tipo . PHP_EOL;
    echo 'Status: ' . \$p->status . PHP_EOL;
    echo 'N√∫mero Protocolo: ' . (\$p->numero_protocolo ?: 'N√ÉO PROTOCOLADO') . PHP_EOL;
    echo 'Arquivo Path: ' . (\$p->arquivo_path ?: 'NENHUM') . PHP_EOL;
    echo 'Assinatura Digital: ' . (\$p->assinatura_digital ? 'SIM' : 'N√ÉO') . PHP_EOL;
} else {
    echo 'Proposi√ß√£o 5 n√£o encontrada';
}
" 2>/dev/null)

echo "$PROPOSICAO_DATA"
echo ""

# 2. Testar gera√ß√£o do PDF
echo "2. Testando gera√ß√£o do PDF com corre√ß√µes..."
echo ""

# Criar um script PHP para testar
cat > /tmp/test_pdf_generation.php << 'EOF'
<?php
require_once '/var/www/html/vendor/autoload.php';
$app = require_once '/var/www/html/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Http\Kernel::class);
$request = Illuminate\Http\Request::capture();
$response = $kernel->handle($request);

use App\Models\Proposicao;
use App\Http\Controllers\ProposicaoAssinaturaController;

try {
    $proposicao = Proposicao::find(5);
    if (!$proposicao) {
        echo "ERRO: Proposi√ß√£o 5 n√£o encontrada\n";
        exit(1);
    }
    
    echo "Proposi√ß√£o encontrada:\n";
    echo "- ID: {$proposicao->id}\n";
    echo "- Tipo: {$proposicao->tipo}\n";
    echo "- N√∫mero Protocolo: " . ($proposicao->numero_protocolo ?: '[AGUARDANDO PROTOCOLO]') . "\n";
    echo "\n";
    
    // Testar gera√ß√£o do PDF
    $controller = new ProposicaoAssinaturaController();
    $pdfPath = storage_path('app/proposicoes/pdfs/5/proposicao_5_test.pdf');
    
    // Criar diret√≥rio se n√£o existir
    $dir = dirname($pdfPath);
    if (!is_dir($dir)) {
        mkdir($dir, 0755, true);
    }
    
    echo "Gerando PDF em: $pdfPath\n";
    
    // Chamar m√©todo privado via reflection
    $reflection = new ReflectionClass($controller);
    $method = $reflection->getMethod('gerarPDFParaAssinatura');
    $method->setAccessible(true);
    $method->invoke($controller, $proposicao);
    
    // Verificar se PDF foi criado
    $pdfRealPath = storage_path('app/proposicoes/pdfs/5/proposicao_5.pdf');
    if (file_exists($pdfRealPath)) {
        $size = filesize($pdfRealPath);
        echo "\n‚úÖ PDF GERADO COM SUCESSO!\n";
        echo "   Tamanho: " . number_format($size) . " bytes\n";
        
        // Verificar conte√∫do do PDF
        exec("pdftotext '$pdfRealPath' - 2>/dev/null | head -20", $content);
        echo "\nüìÑ Primeiras linhas do PDF:\n";
        echo "   " . implode("\n   ", array_slice($content, 0, 10)) . "\n";
        
        // Verificar se tem AGUARDANDO PROTOCOLO se n√£o houver n√∫mero
        if (!$proposicao->numero_protocolo) {
            exec("pdftotext '$pdfRealPath' - 2>/dev/null | grep -c 'AGUARDANDO PROTOCOLO'", $aguardando);
            if ($aguardando[0] > 0) {
                echo "\n‚úÖ Texto '[AGUARDANDO PROTOCOLO]' encontrado no PDF (correto!)\n";
            } else {
                echo "\n‚ö†Ô∏è AVISO: Proposi√ß√£o sem protocolo mas '[AGUARDANDO PROTOCOLO]' n√£o encontrado\n";
            }
        }
        
        // Verificar se tem assinatura digital
        if ($proposicao->assinatura_digital) {
            exec("pdftotext '$pdfRealPath' - 2>/dev/null | grep -c 'Assinatura Digital'", $assinatura);
            if ($assinatura[0] > 0) {
                echo "‚úÖ Assinatura digital encontrada no PDF\n";
            } else {
                echo "‚ö†Ô∏è AVISO: Proposi√ß√£o assinada mas assinatura n√£o encontrada no PDF\n";
            }
        }
        
    } else {
        echo "\n‚ùå ERRO: PDF n√£o foi gerado em $pdfRealPath\n";
    }
    
} catch (Exception $e) {
    echo "\n‚ùå ERRO na gera√ß√£o do PDF:\n";
    echo $e->getMessage() . "\n";
    echo $e->getTraceAsString() . "\n";
}
EOF

# Executar teste
docker exec legisinc-app php /tmp/test_pdf_generation.php

echo ""
echo "======================================"
echo "3. Verificando imagem do cabe√ßalho..."
echo "======================================"

# Verificar se a imagem padr√£o existe
docker exec legisinc-app ls -la /var/www/html/public/template/cabecalho.png 2>/dev/null
if [ $? -eq 0 ]; then
    echo "‚úÖ Imagem do cabe√ßalho encontrada em public/template/cabecalho.png"
else
    echo "‚ö†Ô∏è Imagem do cabe√ßalho n√£o encontrada no local esperado"
fi

echo ""
echo "======================================"
echo "TESTE CONCLU√çDO"
echo "======================================"