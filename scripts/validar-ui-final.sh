#!/bin/bash

echo "üéØ VALIDA√á√ÉO FINAL: UI dos Bot√µes Ap√≥s migrate:fresh --seed"
echo "=========================================================="

# Cores
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }
log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }

echo ""
log_info "ETAPA 1: Verificando estrutura HTML dos bot√µes"
echo "============================================="

# Verificar bot√µes OnlyOffice
OO_COUNT=$(grep -c "btn-onlyoffice" /home/bruno/legisinc/resources/views/proposicoes/show.blade.php)
if [ $OO_COUNT -gt 0 ]; then
    log_success "Bot√µes OnlyOffice encontrados: $OO_COUNT classes aplicadas"
else
    log_error "Bot√µes OnlyOffice n√£o encontrados"
fi

# Verificar bot√µes Assinatura
ASSINATURA_COUNT=$(grep -c "btn-assinatura" /home/bruno/legisinc/resources/views/proposicoes/show.blade.php)
if [ $ASSINATURA_COUNT -gt 0 ]; then
    log_success "Bot√µes Assinatura encontrados: $ASSINATURA_COUNT classes aplicadas"
else
    log_error "Bot√µes Assinatura n√£o encontrados"
fi

# Verificar CSS
CSS_OO=$(grep -c ".btn-onlyoffice" /home/bruno/legisinc/resources/views/proposicoes/show.blade.php)
CSS_ASSINATURA=$(grep -c ".btn-assinatura" /home/bruno/legisinc/resources/views/proposicoes/show.blade.php)

if [ $CSS_OO -gt 0 ] && [ $CSS_ASSINATURA -gt 0 ]; then
    log_success "CSS otimizado aplicado corretamente"
else
    log_error "CSS otimizado n√£o encontrado"
fi

echo ""
log_info "ETAPA 2: Testando funcionalidade dos bot√µes"
echo "=========================================="

# Verificar se a proposi√ß√£o existe
PROPOSICAO_TEST=$(docker exec legisinc-app php artisan tinker --execute="
\$proposicao = App\\Models\\Proposicao::find(2);
if (\$proposicao) {
    echo 'FOUND|' . \$proposicao->id . '|' . \$proposicao->status;
} else {
    echo 'NOT_FOUND';
}
")

if [[ "$PROPOSICAO_TEST" == FOUND* ]]; then
    IFS='|' read -r -a PROP_ARRAY <<< "$PROPOSICAO_TEST"
    log_success "Proposi√ß√£o de teste encontrada: ID ${PROP_ARRAY[1]}, Status: ${PROP_ARRAY[2]}"
else
    log_warning "Proposi√ß√£o de teste n√£o encontrada - criando nova..."
    
    CREATE_TEST=$(docker exec legisinc-app php artisan tinker --execute="
    \$user = App\\Models\\User::where('email', 'jessica@sistema.gov.br')->first();
    \$proposicao = App\\Models\\Proposicao::create([
        'tipo' => 'Mo√ß√£o',
        'ementa' => 'Teste UI Final',
        'conteudo' => 'Teste dos bot√µes UI',
        'autor_id' => \$user->id,
        'status' => 'retornado_legislativo',
        'template_id' => 6
    ]);
    echo 'CREATED|' . \$proposicao->id;
    ")
    
    if [[ "$CREATE_TEST" == CREATED* ]]; then
        log_success "Proposi√ß√£o de teste criada com sucesso"
    else
        log_error "Erro ao criar proposi√ß√£o de teste"
    fi
fi

echo ""
log_info "ETAPA 3: Verificando permiss√µes"
echo "============================="

# Verificar permiss√£o de assinatura
PERM_CHECK=$(docker exec legisinc-app php artisan tinker --execute="
\$perm = DB::table('screen_permissions')
    ->where('role_name', 'PARLAMENTAR')
    ->where('screen_route', 'proposicoes.assinar')
    ->where('can_access', true)
    ->first();
echo \$perm ? 'PERMISSION_OK' : 'PERMISSION_MISSING';
")

if [[ "$PERM_CHECK" == "PERMISSION_OK" ]]; then
    log_success "Permiss√£o proposicoes.assinar configurada"
else
    log_error "Permiss√£o proposicoes.assinar faltando"
fi

echo ""
echo "================================================"
log_info "RESUMO FINAL"
echo "================================================"

ALL_GOOD=true

# Verifica√ß√µes finais
if [ $OO_COUNT -gt 0 ] && [ $ASSINATURA_COUNT -gt 0 ]; then
    log_success "‚úÖ Estrutura HTML: CORRETA"
else
    log_error "‚ùå Estrutura HTML: PROBLEMA"
    ALL_GOOD=false
fi

if [ $CSS_OO -gt 0 ] && [ $CSS_ASSINATURA -gt 0 ]; then
    log_success "‚úÖ CSS Otimizado: APLICADO"
else
    log_error "‚ùå CSS Otimizado: FALTANDO"
    ALL_GOOD=false
fi

if [[ "$PERM_CHECK" == "PERMISSION_OK" ]]; then
    log_success "‚úÖ Permiss√µes: CONFIGURADAS"
else
    log_error "‚ùå Permiss√µes: PROBLEMA"
    ALL_GOOD=false
fi

echo ""
if $ALL_GOOD; then
    log_success "üéâ UI TOTALMENTE FUNCIONAL E PRESERVADA!"
    echo ""
    echo "üöÄ TESTE MANUAL:"
    echo "1. Acesse: http://localhost:8001/login"
    echo "2. Login: jessica@sistema.gov.br / 123456"
    echo "3. V√° para: /proposicoes/2"
    echo "4. Clique em 'Assinar Documento'"
    echo "5. Sistema deve abrir /proposicoes/2/assinar com sucesso!"
else
    log_warning "‚ö†Ô∏è Alguns problemas detectados que precisam ser verificados"
fi

echo ""
log_success "CONFIGURA√á√ÉO UI PRESERVADA PERMANENTEMENTE! üéØ"