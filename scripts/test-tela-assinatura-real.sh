#!/bin/bash

echo "üîß TESTE REAL: Verificando tela de assinatura /proposicoes/8/assinar"
echo "==================================================================="

echo ""
echo "üìç PROBLEMA IDENTIFICADO ATRAV√âS DOS TESTES:"
echo "--------------------------------------------"
echo "‚úÖ M√©todo encontrarArquivoMaisRecente() encontra o arquivo correto"
echo "‚úÖ Arquivo DOCX existe e tem conte√∫do correto editado pelo parlamentar"
echo "‚úÖ PDF de assinatura foi gerado com 29.419 bytes"
echo "‚ùì Mas pode n√£o estar exibindo o conte√∫do correto na tela"

echo ""
echo "üåê TESTANDO A TELA DE ASSINATURA:"
echo "--------------------------------"

# Testar acesso direto √† URL de assinatura
echo "1. Tentando acessar http://localhost:8001/proposicoes/8/assinar"

# Usar curl para testar se a p√°gina carrega
if command -v curl &> /dev/null; then
    echo "   Fazendo requisi√ß√£o HTTP..."
    
    # Primeiro verificar se o servidor est√° rodando
    response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8001/ 2>/dev/null)
    if [ "$response" = "200" ]; then
        echo "   ‚úÖ Servidor Laravel est√° rodando"
        
        # Testar a p√°gina de assinatura (sem autentica√ß√£o, vai redirecionar para login)
        response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8001/proposicoes/8/assinar 2>/dev/null)
        if [ "$response" = "302" ]; then
            echo "   ‚úÖ Rota existe e redireciona para login (normal)"
        elif [ "$response" = "200" ]; then
            echo "   ‚úÖ P√°gina carregou diretamente (se j√° logado)"
        else
            echo "   ‚ùå Erro HTTP $response"
        fi
    else
        echo "   ‚ùå Servidor n√£o est√° respondendo (HTTP $response)"
        echo "   üí° Execute: docker-compose up -d ou npm run dev"
    fi
else
    echo "   ‚ö†Ô∏è  curl n√£o dispon√≠vel"
fi

echo ""
echo "2. Verificando arquivo de rota:"
if [ -f "/home/bruno/legisinc/routes/web.php" ]; then
    echo "   üìÑ Buscando rota 'assinar' em routes/web.php:"
    if grep -n "assinar" /home/bruno/legisinc/routes/web.php; then
        echo "   ‚úÖ Rota de assinatura existe"
    else
        echo "   ‚ùå Rota de assinatura N√ÉO encontrada em web.php"
    fi
else
    echo "   ‚ùå Arquivo routes/web.php n√£o encontrado"
fi

echo ""
echo "3. Verificando m√©todo assinar() no controller:"
if [ -f "/home/bruno/legisinc/app/Http/Controllers/ProposicaoAssinaturaController.php" ]; then
    echo "   üìÑ Verificando se m√©todo assinar() existe:"
    if grep -n "public function assinar" /home/bruno/legisinc/app/Http/Controllers/ProposicaoAssinaturaController.php; then
        echo "   ‚úÖ M√©todo assinar() existe"
    else
        echo "   ‚ùå M√©todo assinar() N√ÉO encontrado"
    fi
else
    echo "   ‚ùå ProposicaoAssinaturaController.php n√£o encontrado"
fi

echo ""
echo "4. Verificando view de assinatura:"
POSSIBLE_VIEWS=(
    "/home/bruno/legisinc/resources/views/proposicoes/assinar.blade.php"
    "/home/bruno/legisinc/resources/views/proposicoes/assinatura.blade.php"
    "/home/bruno/legisinc/resources/views/assinatura/index.blade.php"
    "/home/bruno/legisinc/resources/views/assinatura/show.blade.php"
)

for view in "${POSSIBLE_VIEWS[@]}"; do
    if [ -f "$view" ]; then
        echo "   ‚úÖ View encontrada: $view"
        echo "      Verificando se usa PDF embedado:"
        if grep -q "embed\|iframe\|pdf" "$view"; then
            echo "      ‚úÖ Cont√©m refer√™ncia a PDF"
        else
            echo "      ‚ùå N√ÉO cont√©m refer√™ncia a PDF"
        fi
    fi
done

echo ""
echo "5. Verificando logs em tempo real:"
echo "   üëÄ √öltimos logs relacionados √† assinatura:"
if [ -f "/home/bruno/legisinc/storage/logs/laravel.log" ]; then
    grep -i "assinatura\|PDF\|proposicao.*8" /home/bruno/legisinc/storage/logs/laravel.log | tail -10
else
    echo "   ‚ùå Log do Laravel n√£o encontrado"
fi

echo ""
echo "üéØ PR√ìXIMOS PASSOS RECOMENDADOS:"
echo "==============================="
echo ""
echo "üìã SE O PROBLEMA EST√Å NO PDF GERADO:"
echo "------------------------------------"
echo "1. Verificar se ProposicaoAssinaturaController::criarPDFDoArquivoMaisRecente()"
echo "   est√° realmente usando o arquivo correto"
echo "2. Verificar se extrairConteudoDOCX() est√° extraindo conte√∫do correto"
echo "3. Verificar se a convers√£o DOCX ‚Üí PDF preserva formata√ß√£o"
echo ""
echo "üìã SE O PROBLEMA EST√Å NA EXIBI√á√ÉO:"
echo "----------------------------------"
echo "1. Verificar se a view est√° carregando o PDF mais recente"
echo "2. Verificar se h√° cache de PDF antigo"
echo "3. Verificar se o arquivo PDF gerado tem o conte√∫do correto"
echo ""
echo "üîß TESTE MANUAL RECOMENDADO:"
echo "----------------------------"
echo "1. Acesse: http://localhost:8001/login"
echo "2. Login: jessica@sistema.gov.br / 123456"
echo "3. V√° para: http://localhost:8001/proposicoes/8/assinar"
echo "4. Verifique se o PDF exibido cont√©m:"
echo "   ‚Ä¢ Ementa: 'Editado pelo Parlamentar'"
echo "   ‚Ä¢ Texto: 'Bruno, sua oportunidade chegou!'"
echo "   ‚Ä¢ N√∫mero: '[AGUARDANDO PROTOCOLO]'"
echo ""
echo "SE N√ÉO CONT√âM esses elementos, o problema est√° confirmado!"

echo ""
echo "üí° SOLU√á√ÉO R√ÅPIDA PARA TESTE:"
echo "=============================="
echo "Execute este comando para for√ßar regenera√ß√£o do PDF:"
echo ""
echo "# Deletar PDF atual e for√ßar regenera√ß√£o"
echo "rm -f /home/bruno/legisinc/storage/app/proposicoes/pdfs/8/*.pdf"
echo "rm -f /home/bruno/legisinc/storage/app/private/proposicoes/pdfs/8/*.pdf"
echo ""
echo "# Depois acesse a tela de assinatura novamente"
echo "# O sistema ir√° regenerar o PDF automaticamente"