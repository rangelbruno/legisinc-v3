#!/bin/bash

echo "=== VALIDA√á√ÉO FINAL: BOT√ÉO ASSINAR DOCUMENTO ====="
echo ""

echo "üéØ CORRE√á√ÉO APLICADA: ButtonAssinaturaFixSeeder v2.0"
echo ""

echo "‚úÖ 1. VERIFICANDO FUN√á√ÉO JAVASCRIPT:"
if grep -q "function verificarAutenticacaoENavegar" /home/bruno/legisinc/resources/views/proposicoes/show.blade.php; then
    echo "   ‚úÖ Fun√ß√£o verificarAutenticacaoENavegar existe"
    echo "   üìç Linha: $(grep -n "function verificarAutenticacaoENavegar" /home/bruno/legisinc/resources/views/proposicoes/show.blade.php | cut -d: -f1)"
else
    echo "   ‚ùå Fun√ß√£o verificarAutenticacaoENavegar N√ÉO encontrada"
fi

echo ""
echo "‚úÖ 2. VERIFICANDO BOT√ïES CORRIGIDOS:"
BUTTON_COUNT=$(grep -c "onclick.*verificarAutenticacaoENavegar" /home/bruno/legisinc/resources/views/proposicoes/show.blade.php)
echo "   ‚úÖ $BUTTON_COUNT bot√µes encontrados usando a fun√ß√£o"

if [ "$BUTTON_COUNT" -ge 2 ]; then
    echo "   ‚úÖ Ambos os bot√µes de assinatura foram corrigidos"
else
    echo "   ‚ö†Ô∏è  Nem todos os bot√µes foram corrigidos"
fi

echo ""
echo "‚úÖ 3. VERIFICANDO PERMISS√ïES:"
docker exec legisinc-app php artisan tinker --execute="
\$permission = DB::table('screen_permissions')
    ->where('role_name', 'PARLAMENTAR')
    ->where('screen_route', 'proposicoes.assinar')
    ->first();
echo 'Permiss√£o existe: ' . (\$permission ? 'SIM' : 'N√ÉO') . PHP_EOL;
echo 'Acesso permitido: ' . (\$permission && \$permission->can_access ? 'SIM' : 'N√ÉO') . PHP_EOL;
"

echo ""
echo "‚úÖ 4. VERIFICANDO ESTRUTURA DOS BOT√ïES:"
echo "   Bot√µes agora s√£o do tipo <button> com onclick em vez de <a href>:"
grep -A 1 "btn-assinatura.*onclick" /home/bruno/legisinc/resources/views/proposicoes/show.blade.php | head -4

echo ""
echo "‚úÖ 5. ESTADO DA PROPOSI√á√ÉO TESTE:"
docker exec legisinc-app php artisan tinker --execute="
\$proposicao = App\Models\Proposicao::find(1);
if (\$proposicao) {
    echo 'ID: ' . \$proposicao->id . PHP_EOL;
    echo 'Status: ' . \$proposicao->status . PHP_EOL;
    echo 'Autor ID: ' . \$proposicao->autor_id . PHP_EOL;
    echo 'V√°lido para assinatura: ' . (in_array(\$proposicao->status, ['retornado_legislativo', 'aprovado_assinatura']) ? 'SIM' : 'N√ÉO') . PHP_EOL;
} else {
    echo 'Proposi√ß√£o 1 n√£o encontrada' . PHP_EOL;
}
"

echo ""
echo "üéØ 6. COMPORTAMENTO ESPERADO AGORA:"
echo ""
echo "   üì± NO NAVEGADOR:"
echo "   1. Acesse: http://localhost:8001/login"
echo "   2. Login: jessica@sistema.gov.br / 123456"
echo "   3. V√° para: http://localhost:8001/proposicoes/1"
echo "   4. Clique: 'Assinar Documento'"
echo ""
echo "   üîÑ RESULTADO ESPERADO:"
echo "   ‚Ä¢ Modal 'Verificando acesso...' aparece"
echo "   ‚Ä¢ Se logado: Navega para /proposicoes/1/assinar"
echo "   ‚Ä¢ Se sess√£o expirou: Modal 'Sess√£o Expirada' + redirect para login"
echo "   ‚Ä¢ Se sem permiss√£o: Modal 'Acesso Negado'"
echo "   ‚Ä¢ Se erro: Modal de erro ou fallback para navega√ß√£o direta"
echo ""

echo "üîç 7. VERIFICA√á√ÉO DE LOGS:"
echo "   Agora o sistema registrar√° logs no console do navegador:"
echo "   ‚Ä¢ 'üîç Verificando autentica√ß√£o antes de navegar para: ...'"
echo "   ‚Ä¢ DevTools (F12) ‚Üí Console tab para ver detalhes"
echo ""

echo "üö® 8. SE AINDA N√ÉO FUNCIONAR:"
echo ""
echo "   A) VERIFICAR SWEETALERT2:"
echo "      ‚Ä¢ Abra F12 ‚Üí Console"
echo "      ‚Ä¢ Digite: typeof Swal"
echo "      ‚Ä¢ Deve retornar 'object'"
echo ""
echo "   B) VERIFICAR JAVASCRIPT:"
echo "      ‚Ä¢ Abra F12 ‚Üí Console"
echo "      ‚Ä¢ Digite: typeof verificarAutenticacaoENavegar"
echo "      ‚Ä¢ Deve retornar 'function'"
echo ""
echo "   C) FOR√áA ATUALIZA√á√ÉO:"
echo "      ‚Ä¢ Ctrl+F5 para limpar cache"
echo "      ‚Ä¢ Ou abrir em modo privado/inc√≥gnito"
echo ""

echo "üí° 9. TESTE ALTERNATIVO:"
echo "   No console do navegador (F12), execute:"
echo "   verificarAutenticacaoENavegar('/proposicoes/1/assinar')"
echo ""

echo "=== RESUMO ==="
echo "‚úÖ Seeder executado com sucesso"
echo "‚úÖ Fun√ß√£o JavaScript adicionada"
echo "‚úÖ Bot√µes convertidos de <a> para <button> com onclick"
echo "‚úÖ Permiss√µes confirmadas"
echo "‚úÖ Sistema pronto para teste"
echo ""
echo "üéØ PR√ìXIMO PASSO: Teste manual no navegador"
echo "   O bot√£o agora deve mostrar feedback visual inteligente!"
echo ""