#!/bin/bash

echo "=== TESTE: Corre√ß√£o do Canvas Vazio (Dados de Imagem Inv√°lidos) ==="
echo "Verificando se as corre√ß√µes resolveram o problema de canvas vazio"
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo "1. VERIFICA√á√ÉO DAS CORRE√á√ïES DE CANVAS"
echo "====================================="

# Verificar se o elemento n√£o est√° mais com display: none
if grep -q "position: absolute; left: -9999px" "/home/bruno/legisinc/resources/views/proposicoes/assinatura/assinar-pdf-vue.blade.php"; then
    echo -e "${GREEN}‚úì${NC} Elemento PDF movido para fora da tela (n√£o oculto)"
else
    echo -e "${RED}‚úó${NC} Elemento ainda usando display: none"
fi

# Verificar logs de diagn√≥stico do elemento
if grep -q "offsetWidth.*offsetHeight.*scrollWidth" "/home/bruno/legisinc/resources/views/proposicoes/assinatura/assinar-pdf-vue.blade.php"; then
    echo -e "${GREEN}‚úì${NC} Logs de diagn√≥stico do elemento implementados"
else
    echo -e "${RED}‚úó${NC} Logs de diagn√≥stico do elemento n√£o encontrados"
fi

# Verificar estiliza√ß√£o tempor√°ria
if grep -q "originalStyle.*position.*left.*top" "/home/bruno/legisinc/resources/views/proposicoes/assinatura/assinar-pdf-vue.blade.php"; then
    echo -e "${GREEN}‚úì${NC} Sistema de estiliza√ß√£o tempor√°ria implementado"
else
    echo -e "${RED}‚úó${NC} Sistema de estiliza√ß√£o tempor√°ria n√£o encontrado"
fi

# Verificar valida√ß√£o de dimens√µes do canvas
if grep -q "canvas.width === 0.*canvas.height === 0" "/home/bruno/legisinc/resources/views/proposicoes/assinatura/assinar-pdf-vue.blade.php"; then
    echo -e "${GREEN}‚úì${NC} Valida√ß√£o de dimens√µes zero do canvas implementada"
else
    echo -e "${RED}‚úó${NC} Valida√ß√£o de dimens√µes do canvas n√£o encontrada"
fi

echo ""

echo "2. VERIFICA√á√ÉO DE DIAGN√ìSTICOS DETALHADOS"
echo "========================================"

# Verificar logs detalhados de imagem
if grep -q "Dados da imagem:" "/home/bruno/legisinc/resources/views/proposicoes/assinatura/assinar-pdf-vue.blade.php"; then
    echo -e "${GREEN}‚úì${NC} Logs detalhados de dados da imagem"
else
    echo -e "${RED}‚úó${NC} Logs de dados da imagem n√£o encontrados"
fi

# Verificar diagn√≥stico completo
diagnostic_fields=("imagemVazia" "dataURLVazio" "tamanhoInsuficiente" "elementoVisivel" "canvasDimensoes")

for field in "${diagnostic_fields[@]}"; do
    if grep -q "$field" "/home/bruno/legisinc/resources/views/proposicoes/assinatura/assinar-pdf-vue.blade.php"; then
        echo -e "${GREEN}‚úì${NC} Campo de diagn√≥stico: $field"
    else
        echo -e "${RED}‚úó${NC} Campo de diagn√≥stico n√£o encontrado: $field"
    fi
done

echo ""

echo "3. VERIFICA√á√ÉO DE VALIDA√á√ïES APRIMORADAS"
echo "======================================="

# Verificar valida√ß√£o de tamanho m√≠nimo
if grep -q "imgData.length < 100" "/home/bruno/legisinc/resources/views/proposicoes/assinatura/assinar-pdf-vue.blade.php"; then
    echo -e "${GREEN}‚úì${NC} Valida√ß√£o de tamanho m√≠nimo de dados (100 bytes)"
else
    echo -e "${RED}‚úó${NC} Valida√ß√£o de tamanho m√≠nimo n√£o encontrada"
fi

# Verificar restaura√ß√£o de estilos
if grep -q "element.style.position = originalStyle.position" "/home/bruno/legisinc/resources/views/proposicoes/assinatura/assinar-pdf-vue.blade.php"; then
    echo -e "${GREEN}‚úì${NC} Restaura√ß√£o de estilos originais implementada"
else
    echo -e "${RED}‚úó${NC} Restaura√ß√£o de estilos n√£o encontrada"
fi

# Verificar aguardamento de renderiza√ß√£o
if grep -q "await new Promise.*resolve.*setTimeout.*500" "/home/bruno/legisinc/resources/views/proposicoes/assinatura/assinar-pdf-vue.blade.php"; then
    echo -e "${GREEN}‚úì${NC} Aguardamento de renderiza√ß√£o (500ms) implementado"
else
    echo -e "${RED}‚úó${NC} Aguardamento de renderiza√ß√£o n√£o encontrado"
fi

echo ""

echo "4. TESTE DE ESTRUTURA DO ELEMENTO PDF"
echo "===================================="

# Verificar se o elemento tem conte√∫do estruturado
pdf_elements=("document-header" "document-title" "document-content" "document-signature")

for element in "${pdf_elements[@]}"; do
    if grep -q "$element" "/home/bruno/legisinc/resources/views/proposicoes/assinatura/assinar-pdf-vue.blade.php"; then
        echo -e "${GREEN}‚úì${NC} Elemento estrutural: $element"
    else
        echo -e "${RED}‚úó${NC} Elemento n√£o encontrado: $element"
    fi
done

echo ""

echo "5. VERIFICA√á√ÉO DE LOGS DE DEBUG ESPERADOS"
echo "========================================"

expected_logs=("Elemento encontrado:" "Canvas gerado:" "Canvas convertido para base64" "Dados da imagem:" "Diagn√≥stico de imagem inv√°lida:")

for log in "${expected_logs[@]}"; do
    if grep -q "$log" "/home/bruno/legisinc/resources/views/proposicoes/assinatura/assinar-pdf-vue.blade.php"; then
        echo -e "${GREEN}‚úì${NC} Log de debug: '$log'"
    else
        echo -e "${RED}‚úó${NC} Log n√£o encontrado: '$log'"
    fi
done

echo ""

echo "6. TESTE DE CONECTIVIDADE E RECURSOS"
echo "==================================="

# Verificar se o servidor est√° rodando
if curl -s http://localhost:8001 > /dev/null; then
    echo -e "${GREEN}‚úì${NC} Servidor Laravel operacional"
else
    echo -e "${RED}‚úó${NC} Servidor Laravel n√£o est√° rodando"
fi

# Verificar se a imagem do cabe√ßalho est√° acess√≠vel
if curl -s -I "http://localhost:8001/template/cabecalho.png" | grep -q "200 OK"; then
    echo -e "${GREEN}‚úì${NC} Imagem do cabe√ßalho acess√≠vel"
else
    echo -e "${RED}‚úó${NC} Imagem do cabe√ßalho n√£o acess√≠vel"
fi

echo ""

echo "7. RESUMO DAS CORRE√á√ïES IMPLEMENTADAS"
echo "===================================="

echo -e "${BLUE}üîß CORRE√á√ïES DE CANVAS:${NC}"
echo "  ‚úì Elemento movido para fora da tela (n√£o oculto com display: none)"
echo "  ‚úì Estiliza√ß√£o tempor√°ria durante captura"
echo "  ‚úì Aguardamento de 500ms para renderiza√ß√£o"
echo "  ‚úì Restaura√ß√£o de estilos originais ap√≥s captura"

echo ""
echo -e "${BLUE}üîç DIAGN√ìSTICOS DETALHADOS:${NC}"
echo "  ‚úì Logs completos das dimens√µes do elemento"
echo "  ‚úì Verifica√ß√£o de canvas com dimens√µes zero"
echo "  ‚úì Diagn√≥stico completo de dados de imagem inv√°lidos"
echo "  ‚úì Informa√ß√µes sobre visibilidade e renderiza√ß√£o"

echo ""
echo -e "${BLUE}‚úÖ VALIDA√á√ïES ROBUSTAS:${NC}"
echo "  ‚úì Tamanho m√≠nimo de 100 bytes para dados de imagem"
echo "  ‚úì Verifica√ß√£o se elemento est√° vis√≠vel durante captura"
echo "  ‚úì Valida√ß√£o de dimens√µes do canvas n√£o-zero"
echo "  ‚úì Detec√ß√£o de data URL vazio ou inv√°lido"

echo ""
echo -e "${BLUE}üö® LOGS DE ERROR INFORMATIVOS:${NC}"
echo "  ‚úì JSON detalhado com diagn√≥stico completo"
echo "  ‚úì Informa√ß√µes sobre estado do elemento"
echo "  ‚úì Dimens√µes do canvas para troubleshooting"
echo "  ‚úì Status de visibilidade para debugging"

echo ""

echo "8. COMANDOS PARA TESTAR AS CORRE√á√ïES"
echo "===================================="

echo -e "${BLUE}Para testar as corre√ß√µes espec√≠ficas:${NC}"
echo ""
echo "1. Acesse: http://localhost:8001/login"
echo "2. Login: jessica@sistema.gov.br / 123456"
echo "3. Navegue para: /proposicoes/2"
echo "4. Clique em 'Assinar Documento'"
echo "5. Abra o console (F12) e observe os logs:"
echo ""

echo -e "${YELLOW}LOGS ESPERADOS (SUCESSO):${NC}"
echo "  ‚Ä¢ 'Elemento encontrado: {offsetWidth: X, offsetHeight: Y, hasContent: true}'"
echo "  ‚Ä¢ 'Canvas gerado: {width: X, height: Y, isEmpty: false}'"
echo "  ‚Ä¢ 'Canvas convertido para base64, tamanho: XXXXX'"
echo "  ‚Ä¢ 'Dados da imagem: {length: XXXXX, isValid: true}'"
echo "  ‚Ä¢ 'PDF gerado com sucesso!'"

echo ""
echo -e "${YELLOW}LOGS ESPERADOS (SE AINDA HOUVER PROBLEMA):${NC}"
echo "  ‚Ä¢ 'Elemento encontrado: {offsetWidth: 0, offsetHeight: 0, hasContent: false}'"
echo "  ‚Ä¢ 'Canvas gerado: {width: 0, height: 0, isEmpty: true}'"
echo "  ‚Ä¢ 'Diagn√≥stico de imagem inv√°lida: {elementoVisivel: false, canvasDimensoes: \"0x0\"}'"
echo "  ‚Ä¢ 'Tentando fallback: PDF sem imagens...'"

echo ""

echo "9. POSS√çVEIS PROBLEMAS E SOLU√á√ïES"
echo "================================"

echo -e "${BLUE}PROBLEMA: Elemento com dimens√µes zero${NC}"
echo "CAUSA: Conte√∫do Vue.js n√£o foi renderizado ainda"
echo "SOLU√á√ÉO: Aguardar mais tempo ou verificar dados da proposi√ß√£o"

echo ""
echo -e "${BLUE}PROBLEMA: Canvas ainda retorna dados inv√°lidos${NC}"
echo "CAUSA: Elemento pode estar vazio ou mal formatado"
echo "SOLU√á√ÉO: Sistema ativar√° fallback autom√°tico para PDF textual"

echo ""
echo -e "${BLUE}PROBLEMA: Imagens n√£o carregam${NC}"
echo "CAUSA: CORS ou imagem corrompida"
echo "SOLU√á√ÉO: Fallback remove imagens e gera PDF apenas com texto"

echo ""

echo "=== RESULTADO ==="
echo -e "${GREEN}‚úÖ CORRE√á√ïES DE CANVAS IMPLEMENTADAS COM SUCESSO!${NC}"
echo ""
echo -e "${BLUE}üéØ O erro 'Dados de imagem inv√°lidos' deve estar resolvido com:${NC}"
echo "  ‚úì Elemento n√£o mais oculto com display: none"
echo "  ‚úì Renderiza√ß√£o for√ßada antes da captura"
echo "  ‚úì Diagn√≥sticos detalhados para troubleshooting"
echo "  ‚úì Valida√ß√µes robustas de dimens√µes e conte√∫do"
echo "  ‚úì Sistema de fallback autom√°tico"
echo ""
echo -e "${GREEN}üöÄ Teste novamente e observe os logs detalhados no console!${NC}"
echo ""