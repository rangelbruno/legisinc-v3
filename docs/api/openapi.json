{
  "openapi": "3.0.3",
  "info": {
    "title": "LegisInc API",
    "description": "API RESTful do sistema LegisInc para gestão legislativa desenvolvida com Laravel 12. A API segue padrões REST e utiliza autenticação baseada em tokens.",
    "version": "1.0.0",
    "contact": {
      "email": "equipe-dev@legisinc.gov.br"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8001/api/v1",
      "description": "Servidor de desenvolvimento"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "name": {"type": "string"},
          "email": {"type": "string", "format": "email"},
          "documento": {"type": "string"},
          "telefone": {"type": "string"},
          "cargo_atual": {"type": "string"},
          "partido": {"type": "string"},
          "status": {"type": "string", "enum": ["ativo", "inativo"]},
          "roles": {"type": "array", "items": {"type": "string"}},
          "ultimo_acesso": {"type": "string", "format": "date-time"},
          "created_at": {"type": "string", "format": "date-time"},
          "updated_at": {"type": "string", "format": "date-time"}
        }
      },
      "Projeto": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "titulo": {"type": "string"},
          "numero": {"type": "string"},
          "ano": {"type": "integer"},
          "numero_completo": {"type": "string"},
          "tipo": {"type": "string"},
          "tipo_formatado": {"type": "string"},
          "status": {"type": "string"},
          "status_formatado": {"type": "string"},
          "status_cor": {"type": "string"},
          "urgencia": {"type": "string", "enum": ["normal", "urgente", "urgentissima"]},
          "urgencia_formatada": {"type": "string"},
          "urgencia_cor": {"type": "string"},
          "resumo": {"type": "string"},
          "ementa": {"type": "string"},
          "conteudo": {"type": "string"},
          "palavras_chave": {"type": "string"},
          "version_atual": {"type": "integer"},
          "data_protocolo": {"type": "string", "format": "date-time"},
          "data_limite_tramitacao": {"type": "string", "format": "date"},
          "ativo": {"type": "boolean"},
          "autor": {"$ref": "#/components/schemas/User"},
          "relator": {"$ref": "#/components/schemas/User"},
          "created_at": {"type": "string", "format": "date-time"},
          "updated_at": {"type": "string", "format": "date-time"}
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "data": {"type": "object"},
          "message": {"type": "string"},
          "meta": {
            "type": "object",
            "properties": {
              "timestamp": {"type": "string", "format": "date-time"},
              "version": {"type": "string"}
            }
          }
        }
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean", "example": false},
          "error": {
            "type": "object",
            "properties": {
              "code": {"type": "string"},
              "message": {"type": "string"},
              "details": {"type": "object"}
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "timestamp": {"type": "string", "format": "date-time"},
              "version": {"type": "string"}
            }
          }
        }
      },
      "PaginatedResponse": {
        "allOf": [
          {"$ref": "#/components/schemas/ApiResponse"},
          {
            "type": "object",
            "properties": {
              "meta": {
                "type": "object",
                "properties": {
                  "current_page": {"type": "integer"},
                  "per_page": {"type": "integer"},
                  "total": {"type": "integer"},
                  "last_page": {"type": "integer"},
                  "timestamp": {"type": "string", "format": "date-time"},
                  "version": {"type": "string"}
                }
              }
            }
          }
        ]
      }
    },
    "parameters": {
      "pageParam": {
        "name": "page",
        "in": "query",
        "description": "Número da página",
        "schema": {"type": "integer", "minimum": 1, "default": 1}
      },
      "perPageParam": {
        "name": "per_page",
        "in": "query",
        "description": "Itens por página",
        "schema": {"type": "integer", "minimum": 1, "maximum": 100, "default": 15}
      },
      "searchParam": {
        "name": "search",
        "in": "query",
        "description": "Termo de busca",
        "schema": {"type": "string"}
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Token de acesso inválido ou expirado",
        "content": {
          "application/json": {
            "schema": {"$ref": "#/components/schemas/ApiError"}
          }
        }
      },
      "ForbiddenError": {
        "description": "Permissão negada para esta operação",
        "content": {
          "application/json": {
            "schema": {"$ref": "#/components/schemas/ApiError"}
          }
        }
      },
      "NotFoundError": {
        "description": "Recurso não encontrado",
        "content": {
          "application/json": {
            "schema": {"$ref": "#/components/schemas/ApiError"}
          }
        }
      },
      "ValidationError": {
        "description": "Erro de validação dos dados",
        "content": {
          "application/json": {
            "schema": {"$ref": "#/components/schemas/ApiError"}
          }
        }
      }
    }
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Autenticação"],
        "summary": "Autenticação de usuário",
        "description": "Realiza login no sistema e retorna token de acesso",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {"type": "string", "format": "email", "example": "usuario@exemplo.com"},
                  "password": {"type": "string", "example": "senha123"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/ApiResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "user": {"$ref": "#/components/schemas/User"},
                            "token": {"type": "string"},
                            "expires_at": {"type": "string", "format": "date-time"}
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"}
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Autenticação"],
        "summary": "Logout do usuário",
        "description": "Invalida o token de acesso atual",
        "responses": {
          "200": {
            "description": "Logout realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ApiResponse"}
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"}
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Autenticação"],
        "summary": "Renovar token de acesso",
        "description": "Renova o token de acesso atual",
        "responses": {
          "200": {
            "description": "Token renovado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/ApiResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": {"type": "string"},
                            "expires_at": {"type": "string", "format": "date-time"}
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"}
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Usuários"],
        "summary": "Listar usuários",
        "description": "Lista todos os usuários do sistema com paginação",
        "parameters": [
          {"$ref": "#/components/parameters/pageParam"},
          {"$ref": "#/components/parameters/perPageParam"},
          {"$ref": "#/components/parameters/searchParam"},
          {
            "name": "role",
            "in": "query",
            "description": "Filtrar por perfil",
            "schema": {"type": "string"}
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filtrar por status",
            "schema": {"type": "string", "enum": ["ativo", "inativo"]}
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/PaginatedResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {"$ref": "#/components/schemas/User"}
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "403": {"$ref": "#/components/responses/ForbiddenError"}
        }
      },
      "post": {
        "tags": ["Usuários"],
        "summary": "Criar usuário",
        "description": "Cria um novo usuário no sistema",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": {"type": "string", "example": "Maria Santos"},
                  "email": {"type": "string", "format": "email", "example": "maria@exemplo.com"},
                  "password": {"type": "string", "example": "senha123"},
                  "documento": {"type": "string", "example": "987.654.321-00"},
                  "telefone": {"type": "string", "example": "(11) 88888-8888"},
                  "data_nascimento": {"type": "string", "format": "date", "example": "1980-05-15"},
                  "profissao": {"type": "string", "example": "Advogada"},
                  "cargo_atual": {"type": "string", "example": "Vereadora"},
                  "partido": {"type": "string", "example": "PT"},
                  "roles": {"type": "array", "items": {"type": "string"}, "example": ["PARLAMENTAR"]}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/ApiResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {"$ref": "#/components/schemas/User"}
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "403": {"$ref": "#/components/responses/ForbiddenError"},
          "422": {"$ref": "#/components/responses/ValidationError"}
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Usuários"],
        "summary": "Buscar usuário",
        "description": "Busca um usuário específico por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/ApiResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {"$ref": "#/components/schemas/User"}
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "403": {"$ref": "#/components/responses/ForbiddenError"},
          "404": {"$ref": "#/components/responses/NotFoundError"}
        }
      },
      "put": {
        "tags": ["Usuários"],
        "summary": "Atualizar usuário",
        "description": "Atualiza dados de um usuário existente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "email": {"type": "string", "format": "email"},
                  "documento": {"type": "string"},
                  "telefone": {"type": "string"},
                  "cargo_atual": {"type": "string"},
                  "partido": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/ApiResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {"$ref": "#/components/schemas/User"}
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "403": {"$ref": "#/components/responses/ForbiddenError"},
          "404": {"$ref": "#/components/responses/NotFoundError"},
          "422": {"$ref": "#/components/responses/ValidationError"}
        }
      },
      "delete": {
        "tags": ["Usuários"],
        "summary": "Excluir usuário",
        "description": "Exclui um usuário do sistema (soft delete)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário excluído com sucesso",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ApiResponse"}
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "403": {"$ref": "#/components/responses/ForbiddenError"},
          "404": {"$ref": "#/components/responses/NotFoundError"}
        }
      }
    },
    "/projetos": {
      "get": {
        "tags": ["Projetos"],
        "summary": "Listar projetos",
        "description": "Lista todos os projetos com paginação e filtros",
        "parameters": [
          {"$ref": "#/components/parameters/pageParam"},
          {"$ref": "#/components/parameters/perPageParam"},
          {"$ref": "#/components/parameters/searchParam"},
          {
            "name": "tipo",
            "in": "query",
            "description": "Filtrar por tipo de projeto",
            "schema": {"type": "string"}
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filtrar por status",
            "schema": {"type": "string"}
          },
          {
            "name": "autor_id",
            "in": "query",
            "description": "Filtrar por autor",
            "schema": {"type": "integer"}
          },
          {
            "name": "relator_id",
            "in": "query",
            "description": "Filtrar por relator",
            "schema": {"type": "integer"}
          },
          {
            "name": "urgencia",
            "in": "query",
            "description": "Filtrar por urgência",
            "schema": {"type": "string", "enum": ["normal", "urgente", "urgentissima"]}
          },
          {
            "name": "ano",
            "in": "query",
            "description": "Filtrar por ano",
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de projetos retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/PaginatedResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {"$ref": "#/components/schemas/Projeto"}
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"}
        }
      },
      "post": {
        "tags": ["Projetos"],
        "summary": "Criar projeto",
        "description": "Cria um novo projeto no sistema",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["titulo", "tipo_projeto_id", "ementa"],
                "properties": {
                  "titulo": {"type": "string", "example": "Projeto de Lei sobre Educação"},
                  "tipo_projeto_id": {"type": "integer", "example": 1},
                  "resumo": {"type": "string", "example": "Projeto que visa melhorar a educação pública"},
                  "ementa": {"type": "string", "example": "Dispõe sobre melhorias na educação pública municipal..."},
                  "conteudo": {"type": "string", "example": "<p>Conteúdo HTML do projeto...</p>"},
                  "urgencia": {"type": "string", "enum": ["normal", "urgente", "urgentissima"], "example": "normal"},
                  "palavras_chave": {"type": "string", "example": "educação, escola, ensino"},
                  "observacoes": {"type": "string", "example": "Projeto elaborado com base em consulta pública"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Projeto criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/ApiResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {"$ref": "#/components/schemas/Projeto"}
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "422": {"$ref": "#/components/responses/ValidationError"}
        }
      }
    },
    "/projetos/{id}": {
      "get": {
        "tags": ["Projetos"],
        "summary": "Buscar projeto",
        "description": "Busca um projeto específico com todas as informações",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Projeto encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/ApiResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {"$ref": "#/components/schemas/Projeto"}
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "404": {"$ref": "#/components/responses/NotFoundError"}
        }
      },
      "put": {
        "tags": ["Projetos"],
        "summary": "Atualizar projeto",
        "description": "Atualiza dados de um projeto existente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": {"type": "string"},
                  "ementa": {"type": "string"},
                  "conteudo": {"type": "string"},
                  "urgencia": {"type": "string", "enum": ["normal", "urgente", "urgentissima"]},
                  "palavras_chave": {"type": "string"},
                  "observacoes": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Projeto atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {"$ref": "#/components/schemas/ApiResponse"},
                    {
                      "type": "object",
                      "properties": {
                        "data": {"$ref": "#/components/schemas/Projeto"}
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "403": {"$ref": "#/components/responses/ForbiddenError"},
          "404": {"$ref": "#/components/responses/NotFoundError"},
          "422": {"$ref": "#/components/responses/ValidationError"}
        }
      },
      "delete": {
        "tags": ["Projetos"],
        "summary": "Excluir projeto",
        "description": "Exclui um projeto do sistema (soft delete)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Projeto excluído com sucesso",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ApiResponse"}
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "403": {"$ref": "#/components/responses/ForbiddenError"},
          "404": {"$ref": "#/components/responses/NotFoundError"}
        }
      }
    }
  }
}