services:
  # ====================================
  # üóÑÔ∏è BANCO DE DADOS E CACHE
  # ====================================

  # 1. Banco de Dados PostgreSQL (base da hierarquia)
  db:
    image: postgres:15-alpine
    container_name: legisinc-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: legisinc
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - legisinc_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2. Cache Redis
  redis:
    image: redis:7-alpine
    container_name: legisinc-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - legisinc_network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ====================================
  # üèõÔ∏è CORE DO SISTEMA
  # ====================================

  # 3. Aplica√ß√£o Laravel
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    container_name: legisinc-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    ports:
      - "8001:80"
      - "8444:443"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_URL=http://localhost:8001
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=legisinc
      - DB_USERNAME=postgres
      - DB_PASSWORD=123456
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=null
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    networks:
      - legisinc_network

  # 4. Nova API (Java/Node backend adicional)
  nova-api:
    image: node:18-alpine
    container_name: legisinc-nova-api
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./nova-api:/app
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=legisinc
      - DB_USERNAME=postgres
      - DB_PASSWORD=123456
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: sh -c "npm install && npm run dev || node server.js || sleep infinity"
    networks:
      - legisinc_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ====================================
  # üìù EDI√á√ÉO E DOCUMENTOS
  # ====================================

  # 5. OnlyOffice Document Server
  onlyoffice-documentserver:
    image: onlyoffice/documentserver:8.0
    container_name: legisinc-onlyoffice
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - JWT_ENABLED=false
      - JWT_SECRET=${ONLYOFFICE_JWT_SECRET:-MySecretKey123}
      - JWT_HEADER=Authorization
      - JWT_IN_BODY=true
      - WOPI_ENABLED=false
      - USE_UNAUTHORIZED_STORAGE=true
      - ALLOW_PRIVATE_IP_ADDRESS=true
      - ALLOW_META_IP_ADDRESS=true
      - ALLOW_PRIVATE_IP=true
      - REQUEST_FILTERING_AGENT_SECRET_ENABLED=false
      - DB_TYPE=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=legisinc
      - DB_USER=postgres
      - DB_PWD=123456
      - REDIS_SERVER_HOST=redis
      - REDIS_SERVER_PORT=6379
      - DOCUMENT_SERVER_REGION=pt-BR
      - DOCUMENT_SERVER_LOCALE=pt_BR.UTF-8
      - LC_ALL=pt_BR.UTF-8
      - LANG=pt_BR.UTF-8
      - LANGUAGE=pt_BR:pt
      - ONLYOFFICE_DOCSERV_LANG=pt-BR
      - ONLYOFFICE_DOCSERV_LOCALE=pt_BR.UTF-8
    ports:
      - "8080:80"
    volumes:
      - onlyoffice_data:/var/www/onlyoffice/Data
      - onlyoffice_logs:/var/log/onlyoffice
      - onlyoffice_cache:/var/lib/onlyoffice/documentserver/App_Data/cache/files
      - onlyoffice_forgotten:/var/lib/onlyoffice/documentserver/App_Data/cache/forgotten
      - ./storage/app/public:/var/www/onlyoffice/Data/public
    networks:
      - legisinc_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ====================================
  # üö™ GATEWAY, PROXY E TR√ÅFEGO
  # ====================================

  # 6. Traefik API Gateway
  traefik:
    image: traefik:v3.0
    container_name: legisinc-gateway-simple
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=INFO"
    ports:
      - "8000:80"
      - "8090:8080"  # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - legisinc_network
    depends_on:
      - app
      - nova-api

  # 7. Nginx para Shadow Testing
  nginx-shadow:
    image: nginx:alpine
    container_name: legisinc-nginx-shadow
    restart: unless-stopped
    ports:
      - "8002:80"
    volumes:
      - ./public:/usr/share/nginx/html:ro
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    networks:
      - legisinc_network
    depends_on:
      - app

  # 8. Shadow Comparator
  shadow-comparator:
    image: node:18-alpine
    container_name: legisinc-shadow-comparator
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./shadow-comparator:/app
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - PRIMARY_URL=http://app:80
      - SHADOW_URL=http://nginx-shadow:80
    command: sh -c "npm install && npm run dev || node server.js || sleep infinity"
    networks:
      - legisinc_network
    depends_on:
      - app
      - nginx-shadow

  # 9. Canary Monitor
  canary-monitor:
    image: node:18-alpine
    container_name: legisinc-canary-monitor
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./canary-monitor:/app
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - CANARY_URL=http://app:80
      - STABLE_URL=http://nginx-shadow:80
      - METRICS_INTERVAL=30000
    command: sh -c "npm install && npm run dev || node server.js || sleep infinity"
    networks:
      - legisinc_network
    depends_on:
      - app

  # ====================================
  # üìä MONITORAMENTO E OBSERVABILIDADE
  # ====================================

  # 10. Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: legisinc-prometheus-simple
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - legisinc_network
    depends_on:
      - postgres-exporter

  # 11. Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: legisinc-grafana-simple
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - legisinc_network
    depends_on:
      - prometheus

  # 12. PostgreSQL Exporter
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: legisinc-postgres-exporter
    restart: unless-stopped
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:123456@db:5432/legisinc?sslmode=disable"
    networks:
      - legisinc_network
    depends_on:
      db:
        condition: service_healthy

  # ====================================
  # üí° FERRAMENTAS E DOCUMENTA√á√ÉO
  # ====================================

  # 13. Swagger UI
  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: legisinc-swagger-ui
    restart: unless-stopped
    environment:
      - SWAGGER_JSON=/app/openapi.json
      - DEEP_LINKING=true
      - DISPLAY_OPERATION_ID=true
      - DEFAULT_MODELS_EXPAND_DEPTH=1
      - DEFAULT_MODEL_EXPAND_DEPTH=1
      - DISPLAY_REQUEST_DURATION=true
      - DOC_EXPANSION=list
      - FILTER=true
      - MAX_DISPLAYED_TAGS=10
      - SHOW_EXTENSIONS=true
      - SHOW_COMMON_EXTENSIONS=true
      - TRY_IT_OUT_ENABLED=true
    ports:
      - "8082:8080"
    volumes:
      - ./docs/api:/app:ro
    networks:
      - legisinc_network
    depends_on:
      - app

  # 14. Mermaid Live Editor
  mermaid-live-editor:
    image: ghcr.io/mermaid-js/mermaid-live-editor:latest
    container_name: legisinc-mermaid
    restart: unless-stopped
    platform: linux/amd64
    ports:
      - "8083:8080"
    volumes:
      - ./mermaid-diagrams:/usr/share/nginx/html/legacy-diagrams:ro
      - ./docs:/usr/share/nginx/html/docs:ro
      - ./docs/mermaid:/usr/share/nginx/html/diagrams:ro
    networks:
      - legisinc_network

  # ====================================
  # üîê ASSINATURA DIGITAL (Perfil tools)
  # ====================================

  # 15. PyHanko - Assinatura Digital
  pyhanko:
    build:
      context: ./docker/pyhanko
      dockerfile: Dockerfile
    image: legisinc-pyhanko:latest
    container_name: legisinc-pyhanko-tool
    profiles: ["tools", "signing"]
    entrypoint: ["pyhanko"]
    environment:
      - PFX_PASS
      - TZ=America/Sao_Paulo
    volumes:
      - ./storage:/work
      - ./docker/pyhanko/certs:/certs:ro
    networks:
      - legisinc_network

volumes:
  postgres_data:
  redis_data:
  onlyoffice_data:
  onlyoffice_logs:
  onlyoffice_cache:
  onlyoffice_forgotten:
  prometheus_data:
  grafana_data:

networks:
  legisinc_network:
    driver: bridge